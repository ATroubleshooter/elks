# Kernel configuration

comment 'Just accept the defaults unless you know what you are doing'

mainmenu_option next_comment
	comment 'Hardware'

	comment 'System'

	choice 'Select system' \
		"IBM-PC CONFIG_ARCH_IBMPC \
		 SIBO   CONFIG_ARCH_SIBO" IBM-PC

	if [ "$CONFIG_ARCH_IBMPC" = "y" ]; then

		choice 'Select IBM-PC variant' \
			"PC    CONFIG_PC_AUTO \
			 PC-XT CONFIG_PC_XT   \
			 PC-AT CONFIG_PC_AT   \
			 MCA   CONFIG_PC_MCA" Auto

		choice 'Model of computer' \
			"TrueClone CONFIG_IBMPC_CLONE \
			 Compaq    CONFIG_IBMPC_COMPAQ" TrueClone

		if [ "$CONFIG_IBMPC_COMPAQ" = "y" ]; then
			bool 'Switch Compaq DeskPro to fast mode' CONFIG_COMPAQ_FAST n
		fi

		comment 'Platform'

		choice 'Processor' \
			"8086   CONFIG_CPU_8086   \
			 80186  CONFIG_CPU_80186  \
			 80286  CONFIG_CPU_80286  \
			 80386  CONFIG_CPU_80386  \
			 80486+	CONFIG_CPU_80486" 8086

		int 'Ticks for BogoMIPS (0 = check at boottime)' CONFIG_BOGOMIPS 140055

		int 'Base memory size (64K pages)' CONFIG_MEM_PAGES 8 4 10

		if [[ "$CONFIG_CPU_8086" != "y" && "$CONFIG_CPU_80186" != "y" ]]; then
			bool 'Extended (XMS) memory support' CONFIG_XMS n

			if [ "$CONFIG_XMS" = "y" ]; then
				bool '  Use interrupt 15 for XMS size' CONFIG_XMS_INT15 n

			    if [ "$CONFIG_XMS_INT15" != "y" ]; then
					int '  Extended memory size in kB' CONFIG_XMS_SIZE 0
			    else
					define_int CONFIG_XMS_SIZE 0
			    fi

			else
				define_bool CONFIG_XMS_INT15 n
				define_int  CONFIG_XMS_SIZE  0
			fi

		else
			define_bool CONFIG_XMS_INT15 n
			define_int  CONFIG_XMS_SIZE  0
		fi

		comment 'Devices'

		bool 'Math coprocessor' CONFIG_HW_FPU       n
		bool 'PS/2 mouse'       CONFIG_HW_PS2_MOUSE y
		bool 'VGA adapter'      CONFIG_HW_VGA       y

		bool 'Floppy drive(s)' CONFIG_HW_FLOPPY_DRIVE y
		if [ "$CONFIG_HW_FLOPPY_DRIVE" == "y" ]; then
			bool '  Use INT 13h for floppy count' CONFIG_HW_USE_INT13_FOR_FLOPPY n
		fi

		bool 'Hard drive(s)'   CONFIG_HW_HARD_DRIVE   y
		if [ "$CONFIG_HW_HARD_DRIVE" == "y" ]; then
			bool '  Use INT 13h for disk parameters' CONFIG_HW_USE_INT13_FOR_DISKPARMS n
		fi

		comment 'BIOS support'

		bool 'System has keyboard BIOS support'    CONFIG_HW_KEYBOARD_BIOS y
		bool 'Get fontinfo via CRT-BIOS (40h:85h)' CONFIG_HW_VIDEO_HOC     y

		if [ "$CONFIG_HW_VIDEO_HOC" != "y" ]; then
			int 'Height of characters in lines' CONFIG_HW_VIDEO_LINES_PER_CHARACTER 8
			int 'Lines per page'                CONFIG_HW_VIDEO_LINES_PER_SCREEN    25
		fi

		bool 'Use bootup IRQ-Mask of 8259 as default'    CONFIG_HW_259_USE_ORIGINAL_MASK n
		bool 'Advanced Power Management support'         CONFIG_APM y

	fi

endmenu

mainmenu_option next_comment
	comment 'Kernel settings'

	mainmenu_option next_comment
	    comment 'Memory manager'

		choice 'Allocator' \
			"table CONFIG_MEM_TABLE \
			 list  CONFIG_MEM_LIST" \
			 list

	    bool 'Advanced memory manager' CONFIG_ADVANCED_MM y

	    if [ "$CONFIG_ADVANCED_MM" = "y" ]; then
		     bool 'Enable swap support' CONFIG_SWAP n
		fi

	endmenu

	bool 'Minimize kernel size'               CONFIG_SMALL_KERNEL n
	bool 'Include kernel version system call' CONFIG_SYS_VERSION  n
	bool 'System Trace'                       CONFIG_STRACE       n
	bool 'Halt on Idle'                       CONFIG_IDLE_HALT    n

	if [ "$CONFIG_ARCH_IBMPC" = "y" ]; then
		bool 'Build kernel as ROM-bootable'   CONFIG_ROMCODE      n
    fi

	bool 'Include development code/drivers' CONFIG_EXPERIMENTAL n

	if [ "$CONFIG_EXPERIMENTAL" = "y" ]; then
		bool '286 protected mode' CONFIG_286PMODE n
	else
		comment '(286 protected mode is experimental)'
	fi

    bool 'Modular kernel (NOT IMPLEMENTED)'	CONFIG_MODULES		n

endmenu

if [ "$CONFIG_ROMCODE" = "y" ]; then
    mainmenu_option next_comment
	comment 'ROM-CODE kernel-loader'

	comment 'Absolute segment locations for code in target system ROM'
	hex 'Setup code (0x60 ROM)'	CONFIG_ROM_SETUP_CODE	0xe000
	hex 'Kernel code (64k ROM)'	CONFIG_ROM_KERNEL_CODE	0xe060

	comment 'Absolute segment locations for data in target system RAM'
	hex 'Setup data (0x20 RAM)'	CONFIG_ROM_SETUP_DATA	0x0060
	hex 'Kernel data (64k RAM)'	CONFIG_ROM_KERNEL_DATA	0x0080

	comment 'Information for ROM-Image generator'
	hex 'Start address of ROM (for offset in image-file)'	CONFIG_ROM_BASE 0xe000
	int 'Area with BIOS Checksum in kbytes (normally 64)'	CONFIG_ROM_CHECKSUM_SIZE 64
	bool 'Make image-file bootable by reset' 		CONFIG_ROM_BOOTABLE_BY_RESET n
	if [ "$CONFIG_ROM_BOOTABLE_BY_RESET" = "y" ]; then
	    hex 'Address jumped after reset (offset in image)'	CONFIG_ROM_RESET_ADDRESS 0x0003
	    bool 'Add startup module to image (BIOS-functions)'	CONFIG_ROM_ADD_BIOS_IMAGE n
	    if [ "$CONFIG_ROM_ADD_BIOS_IMAGE" = "y" ]; then
		string 'Name of module' 			CONFIG_ROM_BIOS_MODULE "bios/bioscode.bin"
		hex 'Module code segment address'		CONFIG_ROM_BIOS_MODULE_ADDR 0xf000
	    fi
	fi
	comment 'Generate debug code and information'
	bool 'ROM-CODE debug information'			CONFIG_ROM_DEBUG
    endmenu

    mainmenu_option next_comment
	comment 'EPROM Simulator'

	bool 'Use EPROM Simulator after make'			CONFIG_ROM_USE_SIMULATOR n
	if [ "$CONFIG_ROM_USE_SIMULATOR" = "y" ]; then
	    string 'Program call'				CONFIG_ROM_SIMULATOR_PROGRAM "/usr/bin/simu -t18 Image"
	fi
    endmenu
fi

# Networking support

source elks/net/config.in

# Filesystem support

source elks/fs/config.in

# Drivers configuration

mainmenu_option next_comment
	comment 'Drivers'

	source elks/arch/i86/drivers/block/config.in
	source elks/arch/i86/drivers/char/config.in
	source elks/arch/i86/drivers/net/config.in

endmenu
