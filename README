               ELKS, the Embeddable Linux Kernel Subset
               ----------------------------------------

This is a project to write a Linux-like operating system for ancient
computers running an Intel 8086-compatible processor.

To build ELKS, you will need a cross build chain, mainly based on DEV86, and
also on GCC-IA16 if you select that latest in place of BCC to build the kernel.

A script is provided to automatically download and build that cross chain:

'tools/build.sh'

Note: all the scripts must be executed with top directory /elks as the current one.

A script that attempts to automate the whole build process and make it easier
for ELKS newbies has been provided:

'./build.sh'

If you want to clean everything up afterwards, run './build.sh clean'
and it will run 'make clean' in the build directories for you.

The general build procedure for ELKS is as follows:

* Build the cross chain in 'cross/' (see above)

* Set up your environment (PATH, TOPDIR and CROSSDIR):

'. tools/env.sh' (note the '.' before the script to keep the environment)

* 'make menuconfig' and configure the kernel

* 'make all' (build the kernel and the user land)

* 'cd elkscmd'

* As root, run 'make [imagetype]' where image type is one of these:

  - full3: 1.44MB 3.5" floppy image, all-inclusive

  - full1680: same as full3 but on a 1.68MB 3.5" "extended format" floppy

  - full5: 1.2MB 5.25" floppy image, all-inclusive

  - comb: 720K floppy image, ELKS kernel plus minimal root filesystem

  - comb_net: Same as 'comb' but with network components included

  - comb360: 360K bootable floppy image with very minimal root filesystem

  - boot: 360K floppy image, ELKS kernel only

  - root: 360K floppy image, minimal root filesystem only

  - images: make all images but don't create an archive of them
  - images.zip: make all images, pack into a Zip-compress archive
  - images.tar.gz: make all images, pack into Gzip-compressed tar archive
  - images.tar.xz: make all images, pack into XZ-compressed tar archive

Before writting the image on the real floppy, you test it on QEMU with:
'./qemu.sh' (will configure QEMU to be close as possible to an ISA system)

Questions? Problems? Patches? Join and email the Linux-8086 mailing list at
linux-8086@vger.kernel.org, or open an issue on this GitHub project.

More information in the Documentation folder: elks/Documentation/index.html
